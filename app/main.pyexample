from fastapi import FastAPI, Request
from pydantic import BaseModel
from app.model import predict_price
import logging

app = FastAPI()

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

class PredictionRequest(BaseModel):
    day: str
    data: list

@app.post("/predict")
async def predict(request: PredictionRequest):
    logger.debug(f"Received request: {request}")
    day = request.day
    try:
        prediction = predict_price(day)
        logger.debug(f"Prediction: {prediction}")
        return {"predicted_close": prediction}
    except Exception as e:
        logger.error(f"Error during prediction: {e}")
        raise

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8005)